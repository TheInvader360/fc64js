const unencodedPixelColors = [
 -1,-1,-1,-1,-1,-1,-1,-1,-1, 7, 7, 6, 7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
 -1,-1,-1,-1,-1,-1, 7, 6, 6, 6, 7, 2, 7, 7, 6, 7, 6, 6, 6, 6, 7,-1,-1,-1,-1,-1,-1,-1,-1,-1,
 -1,-1,-1,-1,-1, 2, 2, 2, 2, 7, 6, 7, 7, 7, 6, 6, 6, 7, 7, 7, 6, 6,-1,-1,-1,-1,-1,-1,-1,-1,
 -1,-1,-1,-1,-1, 2, 2, 2, 2, 2, 7, 2, 2, 2, 2, 6, 2, 2, 6, 6, 6, 6, 6,-1,-1,-1,-1,-1,-1,-1,
 -1,-1,-1,-1,-1, 0, 0, 2, 7, 0, 7, 7, 7, 6, 6, 7, 7, 7, 2, 2, 7, 7, 7, 6,-1,-1,-1,-1,-1,-1,
 -1,-1,-1,-1, 0, 7, 7, 2, 7, 7, 7, 7, 7, 6, 2, 7, 2, 6, 6, 6, 2, 2, 7, 6,-1,-1,-1,-1,-1,-1,
 -1,-1,-1,-1, 0, 7, 7, 0, 7, 7, 7, 7, 7, 7, 7, 2, 6, 2, 7, 2, 2, 2, 2, 7, 7, 6,-1,-1,-1,-1,
 -1,-1,-1,-1, 0, 7, 7, 0, 7, 7, 7, 7, 7, 7, 7, 2, 2, 7, 2, 2, 2, 2, 7, 7, 2, 2, 6, 7,-1,-1,
 -1,-1,-1,-1, 0, 7, 0, 0, 7, 7, 7, 7, 2, 2, 2, 7, 2, 2, 2, 7, 2, 7, 2, 7, 7, 2, 2, 2, 7,-1,
 -1,-1,-1,-1,-1, 0, 2, 0, 0, 0, 0, 2, 2, 7, 2, 2, 2, 2, 2, 2, 2, 7, 7, 2, 7, 2, 2, 2, 7,-1,
 -1,-1,-1,-1,-1, 7, 7, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 7, 2, 7, 2, 2, 2, 2, 2, 2, 7, 7, 2,
 -1,-1,-1,-1, 6, 2, 2, 7, 7, 2, 2, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 2, 7, 2, 2, 2, 0, 2, 2, 2,
 -1,-1,-1, 7, 7, 7, 2, 0, 7, 2, 0, 0, 0, 2, 2, 0, 0, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 7, 2, 7,
 -1,-1,-1, 7, 7, 2, 0, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 7,
 -1,-1, 0, 2, 7, 2, 2, 2, 0, 0, 2, 0, 0, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 7, 2, 2, 2, 3, 0,
 -1, 0, 7, 7, 0, 0, 2, 2, 2, 2, 2, 2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 0, 0, 7,
  5, 0, 7, 3, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 0, 2, 7, 3, 1,
  6, 7, 7, 0, 2, 0, 2, 2, 2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2, 0, 7,
  4, 0, 7, 7, 0, 2, 2, 0, 0, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 0, 0, 2, 0, 2, 2, 3, 7,
  0, 0, 0, 2, 0, 2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 0, 2, 2, 2, 2, 0,
  5, 0, 0, 2, 0, 2, 2, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0,
  0, 0, 2, 7, 2, 2, 2, 2, 2, 0, 0, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 6, 0,
  4, 0, 2, 2, 2, 7, 7, 7, 0, 0, 7, 2, 2, 2, 0, 2, 2, 2, 0, 2, 2, 2, 2, 0, 2, 0, 2, 0, 6, 5,
  6, 5, 2, 0, 2, 7, 6, 7, 0, 0, 0, 2, 2, 0, 0, 0, 2, 0, 2, 2, 2, 0, 2, 0, 0, 0, 0, 0, 6, 6,
  4, 7, 0, 0, 2, 6, 6, 0, 0, 0, 2, 2, 2, 2, 7, 7, 2, 2, 0, 2, 0, 0, 0, 0, 0, 0, 4, 0, 6, 0,
  0, 5, 7, 2, 0, 6, 0, 6, 0, 0, 6, 2, 2, 7, 0, 7, 7, 0, 0, 0, 0, 0, 0, 0, 7, 4, 0, 0, 0, 0,
  6, 4, 0, 7, 0, 0, 2, 0, 0, 0, 7, 0, 7, 0, 7, 7, 7, 0, 0, 0, 7, 0, 7, 7, 7, 7, 7, 0, 0, 0,
  0, 0, 0, 7, 2, 7, 7, 7, 0, 0, 5, 7, 7, 7, 7, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 7, 5, 0, 0,
  0, 6, 4, 0, 0, 0, 0, 0, 7, 5, 5, 5, 7, 0, 0, 0, 0, 0, 7, 0, 7, 0, 0, 0, 0, 0, 7, 5, 0, 0,
  6, 4, 7, 7, 0, 0, 7, 7, 7, 5, 5, 7, 2, 0, 7, 0, 7, 7, 7, 0, 0, 0, 2, 4, 0, 0, 0, 5, 0, 5,
];

const hexString = 'fffffffff7767fffffffffffffffffffffff766672776766667ffffffffffffff22227677766677766fffffffffffff222227222262266666ffffffffffff0027077766777227776ffffffffff07727777762726662276ffffffffff0770777777726272222776ffffffff077077777772272222772267ffffff0700777722272227272772227ffffff020000227222222277272227ffffff7720002222222727222222772ffff62277222220022222272220222fff777207200022002222022222727fff772020000020000022222222007ff0272220020022202222222722230f07700222222022200000222222007507302220000002220002222202731677020222222000222222022222207407702200220222222220200202237000202222000222222222022022220500202200000022222222222222220002722222002202222222222220060402227770072220222022220202065652027670002200020222020000066470026600022227722020000004060057206060062270770000000740000640700200070707770007077777000000727770057777700000000077500064000007555700000707000007500647700777557207077700024000505';

let pixelColorsDecodedHex;

function romInit() {
  pixelColorsDecodedHex = hexStringToPixelColors(hexString);
}

function romLoop() {
  clearGfx(COL_WHT);
  drawRectangle(0, 7, 64, 32, COL_MAG, COL_MAG);
  if (isPressed(BTN_A)) {
    drawTextCentered(1, 'DECODED HEX', COL_BLK);
    drawImage(17, 9, 30, 30, pixelColorsDecodedHex);
    drawTextCentered(49, '903 BYTES', COL_BLK);
  } else {
    drawTextCentered(1, 'UNENCODED ARRAY', COL_BLK);
    drawImage(17, 9, 30, 30, unencodedPixelColors);
    drawTextCentered(40, '2764 BYTES', COL_BLK);
    drawTextCentered(46, 'FORMATTED', COL_BLK);
    drawTextCentered(52, '1932 BYTES', COL_BLK);
    drawTextCentered(58, 'STRIPPED', COL_BLK);
  }
}

const hexStringToPixelColors = (hexString) => {
  const pixelColors = [];
  for (const hexDigit of hexString) {
    if (hexDigit === 'f') {
      pixelColors.push(-1);
    } else {
      pixelColors.push(parseInt(hexDigit, 16));
    }
  }
  return pixelColors;
}

const drawTextCentered = (y, content, color) => drawText((64 - content.length * 4) / 2, y, content, color);
